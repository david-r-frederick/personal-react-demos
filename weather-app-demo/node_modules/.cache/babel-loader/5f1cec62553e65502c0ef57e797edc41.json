{"ast":null,"code":"import mostlySunnyImg from '../../img/partlysunny.png';\nimport rainyImg from '../../img/rainy.png';\nimport snowyImg from '../../img/snowy.png';\nimport stormyImg from '../../img/stormy.png';\nimport sunnyImg from '../../img/sunny.png';\nconst images = [mostlySunnyImg, rainyImg, snowyImg, stormyImg, sunnyImg, sunnyImg, sunnyImg];\nconst imagesObj = {\n  'Clear': sunnyImg\n};\nconst initialState = {\n  images: images,\n  highTemps: ['', '', '', '', '', '', ''],\n  lowTemps: ['', '', '', '', '', '', ''],\n  weatherDescs: ['', '', '', '', '', '', '']\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'FETCH_WEATHER') {\n    console.log(action);\n    return { ...state,\n      highTemps: action.resData.daily.map(el => {\n        return Math.round((el.temp.max - 273.15) * 9 / 5 + 32);\n      }),\n      lowTemps: action.resData.daily.map(el => {\n        return Math.round((el.temp.min - 273.15) * 9 / 5 + 32);\n      }),\n      images: action.resData.daily.map(el => {\n        if (imagesObj[el.weather[0].main]) {\n          return imagesObj[el.weather[0].main];\n        } else {\n          return sunnyImg;\n        }\n      })\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dfred/Documents/Udemy React JS Course/weather-app-demo/src/store/reducers/reducer.js"],"names":["mostlySunnyImg","rainyImg","snowyImg","stormyImg","sunnyImg","images","imagesObj","initialState","highTemps","lowTemps","weatherDescs","reducer","state","action","type","console","log","resData","daily","map","el","Math","round","temp","max","min","weather","main"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,MAAMC,MAAM,GAAG,CAACL,cAAD,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,QAAhD,EAA0DA,QAA1D,EAAoEA,QAApE,CAAf;AAEA,MAAME,SAAS,GAAG;AAChB,WAASF;AADO,CAAlB;AAIA,MAAMG,YAAY,GAAG;AACjBF,EAAAA,MAAM,EAAEA,MADS;AAEjBG,EAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAFM;AAGjBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAHO;AAIjBC,EAAAA,YAAY,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAJG,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAmC;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,WAAO,EACL,GAAGD,KADE;AAELJ,MAAAA,SAAS,EAAEK,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqBC,GAArB,CAAyBC,EAAE,IAAI;AACxC,eAAOC,IAAI,CAACC,KAAL,CAAY,CAACF,EAAE,CAACG,IAAH,CAAQC,GAAR,GAAc,MAAf,IAAyB,CAA1B,GAA+B,CAA/B,GAAmC,EAA9C,CAAP;AACD,OAFU,CAFN;AAKLf,MAAAA,QAAQ,EAAEI,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqBC,GAArB,CAAyBC,EAAE,IAAI;AACvC,eAAOC,IAAI,CAACC,KAAL,CAAY,CAACF,EAAE,CAACG,IAAH,CAAQE,GAAR,GAAc,MAAf,IAAyB,CAA1B,GAA+B,CAA/B,GAAmC,EAA9C,CAAP;AACD,OAFS,CALL;AAQLpB,MAAAA,MAAM,EAAEQ,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqBC,GAArB,CAAyBC,EAAE,IAAI;AACrC,YAAGd,SAAS,CAACc,EAAE,CAACM,OAAH,CAAW,CAAX,EAAcC,IAAf,CAAZ,EAAiC;AAC/B,iBAAOrB,SAAS,CAACc,EAAE,CAACM,OAAH,CAAW,CAAX,EAAcC,IAAf,CAAhB;AACD,SAFD,MAEO;AACL,iBAAOvB,QAAP;AACD;AACF,OANO;AARH,KAAP;AAgBD;;AACD,SAAOQ,KAAP;AACD,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import mostlySunnyImg from '../../img/partlysunny.png';\r\nimport rainyImg from '../../img/rainy.png';\r\nimport snowyImg from '../../img/snowy.png';\r\nimport stormyImg from '../../img/stormy.png';\r\nimport sunnyImg from '../../img/sunny.png';\r\n\r\nconst images = [mostlySunnyImg, rainyImg, snowyImg, stormyImg, sunnyImg, sunnyImg, sunnyImg];\r\n\r\nconst imagesObj = {\r\n  'Clear': sunnyImg\r\n}\r\n\r\nconst initialState = {\r\n    images: images,\r\n    highTemps: ['', '', '', '', '', '', ''],\r\n    lowTemps: ['', '', '', '', '', '', ''],\r\n    weatherDescs: ['', '', '', '', '', '', '']\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if(action.type === 'FETCH_WEATHER'){\r\n    console.log(action);\r\n    return {\r\n      ...state,\r\n      highTemps: action.resData.daily.map(el => {\r\n        return Math.round(((el.temp.max - 273.15) * 9) / 5 + 32);\r\n      }),\r\n      lowTemps: action.resData.daily.map(el => {\r\n        return Math.round(((el.temp.min - 273.15) * 9) / 5 + 32);\r\n      }),\r\n      images: action.resData.daily.map(el => {\r\n        if(imagesObj[el.weather[0].main]){\r\n          return imagesObj[el.weather[0].main];\r\n        } else {\r\n          return sunnyImg;\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}