{"ast":null,"code":"import mostlySunnyImg from '../../img/partlysunny.png';\nimport rainyImg from '../../img/rainy.png';\nimport snowyImg from '../../img/snowy.png';\nimport stormyImg from '../../img/stormy.png';\nimport sunnyImg from '../../img/sunny.png';\nimport cloudyImg from '../../img/cloudy.png';\nimport questionMarkImg from '../../img/questionMark.png';\nconst images = Array(7).fill(questionMarkImg);\nconst hours = [];\nconst currentDate = new Date();\n\nfor (let i = 0; i < 7; i++) {\n  hours.push(currentDate.getHours() + i);\n}\n\nconst imagesObj = {\n  'Clear': sunnyImg,\n  'Clouds': cloudyImg,\n  'Rain': rainyImg,\n  'Snow': snowyImg,\n  'Storm': stormyImg\n};\nconst initialState = {\n  images: images,\n  highTemps: ['', '', '', '', '', '', ''],\n  lowTemps: ['', '', '', '', '', '', ''],\n  hourTemps: ['', '', '', '', '', '', ''],\n  weatherDescs: ['', '', '', '', '', '', '']\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'FETCH_WEATHER') {\n    console.log(action.resData);\n    console.log(action.resData.hourly.slice(0));\n    return { ...state,\n      highTemps: action.resData.daily.map(el => {\n        return Math.round(el.temp.max);\n      }),\n      lowTemps: action.resData.daily.map(el => {\n        return Math.round(el.temp.min);\n      }),\n      hourTemps: action.resData.hourly.slice(+hours[0], +hours[7]).map(el => {\n        return Math.round(el.temp).toFixed(0);\n      }),\n      images: action.resData.daily.map(el => {\n        if (imagesObj[el.weather[0].main]) {\n          return imagesObj[el.weather[0].main];\n        } else {\n          return sunnyImg;\n        }\n      })\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dfred/Documents/Udemy React JS Course/weather-app-demo/src/store/reducers/reducer.js"],"names":["mostlySunnyImg","rainyImg","snowyImg","stormyImg","sunnyImg","cloudyImg","questionMarkImg","images","Array","fill","hours","currentDate","Date","i","push","getHours","imagesObj","initialState","highTemps","lowTemps","hourTemps","weatherDescs","reducer","state","action","type","console","log","resData","hourly","slice","daily","map","el","Math","round","temp","max","min","toFixed","weather","main"],"mappings":"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","sourcesContent":["import mostlySunnyImg from '../../img/partlysunny.png';\r\nimport rainyImg from '../../img/rainy.png';\r\nimport snowyImg from '../../img/snowy.png';\r\nimport stormyImg from '../../img/stormy.png';\r\nimport sunnyImg from '../../img/sunny.png';\r\nimport cloudyImg from '../../img/cloudy.png';\r\nimport questionMarkImg from '../../img/questionMark.png';\r\n\r\nconst images = Array(7).fill(questionMarkImg);\r\n\r\nconst hours = [];\r\nconst currentDate = new Date();\r\nfor(let i = 0; i < 7; i++){\r\n  hours.push(currentDate.getHours() + i);\r\n}\r\n\r\nconst imagesObj = {\r\n  'Clear': sunnyImg,\r\n  'Clouds': cloudyImg,\r\n  'Rain': rainyImg,\r\n  'Snow': snowyImg,\r\n  'Storm': stormyImg\r\n}\r\n\r\nconst initialState = {\r\n    images: images,\r\n    highTemps: ['', '', '', '', '', '', ''],\r\n    lowTemps: ['', '', '', '', '', '', ''],\r\n    hourTemps: ['', '', '', '', '', '', ''],\r\n    weatherDescs: ['', '', '', '', '', '', '']\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if(action.type === 'FETCH_WEATHER'){\r\n    console.log(action.resData);\r\n    console.log(action.resData.hourly.slice(0));\r\n    return {\r\n      ...state,\r\n      highTemps: action.resData.daily.map(el => {\r\n        return Math.round(el.temp.max);\r\n      }),\r\n      lowTemps: action.resData.daily.map(el => {\r\n        return Math.round(el.temp.min);\r\n      }),\r\n      hourTemps: action.resData.hourly.slice(+hours[0], +hours[7]).map(el => {\r\n        return Math.round(el.temp).toFixed(0);\r\n      }),\r\n      images: action.resData.daily.map(el => {\r\n        if(imagesObj[el.weather[0].main]){\r\n          return imagesObj[el.weather[0].main];\r\n        } else {\r\n          return sunnyImg;\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}