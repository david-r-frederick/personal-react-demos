{"version":3,"sources":["Weather Card/weatherCard.module.css","Side Menu/SideMenu.module.css","assets/sunny.png","Search Box/searchBox.module.css","BackgroundBox/BackgroundBox.module.css","assets/cloudy.png","Seven Day Forecast/sevenDay.module.css","Banner/banner.module.css","Spinner.module.css","Hourly Forecast/HourlyForecast.module.css","Current Weather/CurrentWeather.module.css","assets/rainy.png","assets/snowy.png","assets/stormy.png","assets/questionMark.png","Seven Day Forecast/sevenDay.js","Weather Card/weatherCard.js","Banner/banner.js","Hourly Forecast/HourlyForecast.js","Side Menu/SideMenu.js","Spinner.js","Search Box/searchBox.js","BackgroundBox/BackgroundBox.js","Current Weather/CurrentWeather.js","App.js","serviceWorker.js","store/reducers/reducer.js","index.js"],"names":["module","exports","weatherCard","props","className","classes","src","img","alt","highTemp","lowTemp","hourTemp","weatherDescription","date","banner","bannerTitle","week","Date","toLocaleDateString","weekday","year","month","day","i","push","now","sevenDay","weatherRow","Array","fill","map","el","index","dayImages","highTemps","lowTemps","weatherDescriptions","key","Component","connect","state","weatherDescs","sideMenu","menu","menuItem","to","spinner","loader","searchBox","searchString","currentLocation","currentCityTemp","loading","inputChangeHandler","event","setState","target","value","axios","get","then","response","data","results","formatted","geometry","lat","lng","onFetchWeatherData","current","temp","catch","err","alert","message","header","this","Spinner","city","onChange","e","onKeyDown","ev","newCityChangeHandler","toFixed","dispatch","resData","type","hours","currentDate","currentHour","getHours","hourly","hourlyRow","hourImages","hourTemps","backgroundBox","boxHolder","box","currentWeather","currentWeatherBlock","currentData","BackgroundBox","weatherBlock","currentImg","Math","round","feels_like","weather","description","wind_speed","currentImage","App","SideMenu","path","component","SevenDay","Hourly","CurrentWeather","Boolean","window","location","hostname","match","images","questionMarkImg","imagesObj","sunnyImg","cloudyImg","rainyImg","snowyImg","stormyImg","initialState","reducer","action","daily","max","min","slice","main","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.ac75ced7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherCard\":\"weatherCard_weatherCard__2050p\",\"date\":\"weatherCard_date__2zMTx\",\"highTemp\":\"weatherCard_highTemp__2S7qz\",\"lowTemp\":\"weatherCard_lowTemp__2KPhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"SideMenu_menu__3YGQt\",\"menuItem\":\"SideMenu_menuItem__WbOmA\"};","module.exports = __webpack_public_path__ + \"static/media/sunny.c739753a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"searchBox_header__2Fey9\",\"searchBox\":\"searchBox_searchBox__3-Yc8\",\"city\":\"searchBox_city__21-XO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxHolder\":\"BackgroundBox_boxHolder__1lIo7\",\"box\":\"BackgroundBox_box__GTC01\"};","module.exports = __webpack_public_path__ + \"static/media/cloudy.a4ee5fda.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherRow\":\"sevenDay_weatherRow__31ojS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner_banner__1JYw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__W1oyT\",\"load5\":\"Spinner_load5__3wif4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hourlyRow\":\"HourlyForecast_hourlyRow__2j-M9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherBlock\":\"CurrentWeather_weatherBlock__GCiT6\"};","module.exports = __webpack_public_path__ + \"static/media/rainy.0fb4ff82.png\";","module.exports = __webpack_public_path__ + \"static/media/snowy.38c8b511.png\";","module.exports = __webpack_public_path__ + \"static/media/stormy.6dab936d.png\";","module.exports = __webpack_public_path__ + \"static/media/questionMark.e730f981.png\";","import React, { Component } from 'react';\r\nimport WeatherCard from '../Weather Card/weatherCard';\r\nimport classes from './sevenDay.module.css';\r\nimport Banner from '../Banner/banner';\r\nimport { connect } from 'react-redux';\r\n\r\nconst today = new Date().toLocaleDateString('en-US', {\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n});\r\n\r\nconst week = [today];\r\n\r\nfor (let i = 1; i < 7; i++) {\r\n    week.push(\r\n        new Date(Date.now() + i * 24 * 60 * 60 * 1000).toLocaleDateString(\r\n            'en-US',\r\n            {\r\n                weekday: 'long',\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric',\r\n            }\r\n        )\r\n    );\r\n}\r\n\r\nclass sevenDay extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Banner bannerTitle=\"7 Day Forecast\" />\r\n                <div className={classes.weatherRow}>\r\n                    {Array(7)\r\n                        .fill(null)\r\n                        .map((el, index) => {\r\n                            return (\r\n                                <WeatherCard\r\n                                    img={this.props.dayImages[index]}\r\n                                    highTemp={`High: ${this.props.highTemps[index]}°`}\r\n                                    lowTemp={`Low: ${this.props.lowTemps[index]}°`}\r\n                                    weatherDescription={\r\n                                        this.props.weatherDescriptions[index]\r\n                                    }\r\n                                    key={index}\r\n                                    date={week[index]}\r\n                                />\r\n                            );\r\n                        })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dayImages: state.dayImages,\r\n        highTemps: state.highTemps,\r\n        lowTemps: state.lowTemps,\r\n        weatherDescriptions: state.weatherDescs,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(sevenDay);\r\n","import React from 'react';\r\nimport classes from './weatherCard.module.css';\r\n\r\nconst weatherCard = (props) => {\r\n    return (\r\n        <div className={classes.weatherCard}>\r\n            <img src={props.img} alt=\"Weather Png\"></img>\r\n            <p className={classes.highTemp}>{props.highTemp}</p>\r\n            <p className={classes.lowTemp}>{props.lowTemp}</p>\r\n            <p>{props.hourTemp}</p>\r\n            <p>{props.weatherDescription}</p>\r\n            <p className={classes.date}>{props.date}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default weatherCard;","import React from 'react';\r\nimport classes from './banner.module.css';\r\n\r\nconst banner = props => {\r\n    return (\r\n        <h1 className={classes.banner}>{props.bannerTitle}</h1>\r\n    )\r\n}\r\n\r\nexport default banner;","import React, { Component } from 'react';\r\nimport Banner from '../Banner/banner';\r\nimport WeatherCard from '../Weather Card/weatherCard';\r\nimport classes from './HourlyForecast.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst hours = [];\r\nconst currentDate = new Date();\r\nfor (let i = 0; i < 7; i++) {\r\n    let currentHour = currentDate.getHours() + i;\r\n    if (currentHour > 24){\r\n        currentHour -= 24 + ':00 am';\r\n    } else if (currentHour > 12){\r\n        currentHour = currentHour - 12 + ':00 pm';\r\n    } else if (currentHour === 12){\r\n        currentHour += ':00 pm';\r\n    } else {\r\n        currentHour += ':00 am';\r\n    }\r\n    hours.push(currentHour);\r\n}\r\n\r\n\r\nclass hourly extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Banner bannerTitle=\"Hourly Forecast\" />\r\n                <div className={classes.hourlyRow}>\r\n                    {Array(7)\r\n                        .fill(null)\r\n                        .map((el, index) => {\r\n                            return (\r\n                                <WeatherCard\r\n                                    img={this.props.hourImages[index]}\r\n                                    hourTemp={\r\n                                        this.props.hourTemps[index] !== ''\r\n                                            ? `${this.props.hourTemps[index]}°`\r\n                                            : ''\r\n                                    }\r\n                                    weatherDescription={\r\n                                        this.props.weatherDescriptions[index]\r\n                                    }\r\n                                    key={index}\r\n                                    date={hours[index]}\r\n                                />\r\n                            );\r\n                        })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hourImages: state.hourImages,\r\n        highTemps: state.highTemps,\r\n        lowTemps: state.lowTemps,\r\n        hourTemps: state.hourTemps,\r\n        weatherDescriptions: state.weatherDescs,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(hourly);\r\n","import React from 'react';\r\nimport classes from './SideMenu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst sideMenu = (props) => {\r\n    return (\r\n        <ul className={classes.menu}>\r\n            <li>\r\n                <NavLink className={classes.menuItem} to=\"/current\">Current Weather</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink className={classes.menuItem} to=\"/hourly\">Hourly Forecast</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink className={classes.menuItem} to=\"/sevenDay\">Seven Day Forecast</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default sideMenu;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => <div className={classes.loader}>Loading...</div>;\r\n\r\nexport default spinner;","import React, { Component, Fragment } from 'react';\r\nimport classes from './searchBox.module.css';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Spinner';\r\n\r\nclass searchBox extends Component {\r\n    state = {\r\n        searchString: null,\r\n        currentLocation: null,\r\n        currentCityTemp: null,\r\n        loading: false,\r\n    };\r\n\r\n    inputChangeHandler = (event) => {\r\n        this.setState({ searchString: event.target.value });\r\n    };\r\n\r\n    newCityChangeHandler(event) {\r\n        axios\r\n            .get(\r\n                `https://api.opencagedata.com/geocode/v1/json?q=${event.target.value}&key=d53b66b417bc4f72b999d35d1fbf4b98`\r\n            )\r\n            .then((response) => {\r\n                this.setState({\r\n                    currentLocation: response.data.results[0].formatted,\r\n                });\r\n                axios\r\n                    .get(\r\n                        `https://api.openweathermap.org/data/2.5/onecall?lat=${response.data.results[0].geometry.lat}&lon=${response.data.results[0].geometry.lng}&units=imperial&appid=da9156d2392f013a7e000b4e71847f75`\r\n                    )\r\n                    .then((response) => {\r\n                        this.props.onFetchWeatherData(response.data);\r\n                        this.setState({\r\n                            currentCityTemp: response.data.current.temp,\r\n                            loading: false,\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                        alert(err.message);\r\n                    });\r\n            })\r\n            .catch((err) => {\r\n                alert('Please enter a valid city');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.header}>\r\n                {this.state.loading ? (\r\n                    <Spinner />\r\n                ) : (\r\n                    <Fragment>\r\n                        <div className={classes.city}>\r\n                            <h2>\r\n                                Current Location: {this.state.currentLocation}\r\n                            </h2>\r\n                        </div>\r\n                        <div className={classes.searchBox}>\r\n                            <p>Search</p>\r\n                            <input\r\n                                onChange={(e) => this.inputChangeHandler(e)}\r\n                                onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        this.setState({ loading: true });\r\n                                        this.newCityChangeHandler(ev);\r\n                                    }\r\n                                }}\r\n                            ></input>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n                <p>\r\n                    {this.state.currentCityTemp && !this.state.loading\r\n                        ? `Current Temperature: ${this.state.currentCityTemp.toFixed(\r\n                              0\r\n                          )}°`\r\n                        : ''}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchWeatherData: (resData) =>\r\n            dispatch({ type: 'FETCH_WEATHER', resData }),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(searchBox);\r\n","import React from 'react';\r\nimport classes from './BackgroundBox.module.css';\r\n\r\nconst backgroundBox = () => {\r\n    return (\r\n        <div className={classes.boxHolder}>\r\n            <div className={classes.box}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backgroundBox;","import React, { Component, Fragment } from 'react';\r\nimport Banner from '../Banner/banner';\r\nimport { connect } from 'react-redux';\r\nimport classes from './CurrentWeather.module.css';\r\nimport BackgroundBox from '../BackgroundBox/BackgroundBox'\r\n\r\nclass currentWeather extends Component {\r\n    render() {\r\n        let currentWeatherBlock = null;\r\n        if (this.props.currentData !== null) {\r\n            currentWeatherBlock = (\r\n                <div>\r\n                    <BackgroundBox />\r\n                    <div className={classes.weatherBlock}>\r\n                        <img src={this.props.currentImg} alt={'Current Weather Icon'} />\r\n                        <p>Current Temperature: {Math.round(this.props.currentData.temp.toFixed(0))}°\r\n                        </p>\r\n                        <p>Feels Like: {Math.round(this.props.currentData.feels_like)}°</p>\r\n                        <p>Description: {this.props.currentData.weather[0].description}</p>\r\n                        <p>\r\n                            Wind: {Math.round(this.props.currentData.wind_speed.toFixed(0))} mph\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Banner bannerTitle=\"Current Weather\" />\r\n                {currentWeatherBlock}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentImg: state.currentImage,\r\n        currentData: state.currentData,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(currentWeather);\r\n","import React from 'react';\nimport './App.css';\nimport SevenDay from './Seven Day Forecast/sevenDay';\nimport SideMenu from './Side Menu/SideMenu';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport SearchBox from './Search Box/searchBox';\nimport Hourly from './Hourly Forecast/HourlyForecast';\nimport CurrentWeather from './Current Weather/CurrentWeather';\nimport './App.css';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <header>Welcome to my Demo Weather Page</header>\n            <div className=\"utility\">\n                <SideMenu />\n                <SearchBox city={'Houston'} />\n            </div>\n            <Route path=\"/sevenDay\" component={SevenDay} />\n            <Route path=\"/hourly\" component={Hourly} />\n            <Route path=\"/current\" component={CurrentWeather} />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import rainyImg from '../../assets/rainy.png';\r\nimport snowyImg from '../../assets/snowy.png';\r\nimport stormyImg from '../../assets/stormy.png';\r\nimport sunnyImg from '../../assets/sunny.png';\r\nimport cloudyImg from '../../assets/cloudy.png';\r\nimport questionMarkImg from '../../assets/questionMark.png';\r\n\r\nconst images = Array(7).fill(questionMarkImg);\r\n\r\nconst imagesObj = {\r\n  'Clear': sunnyImg,\r\n  'Clouds': cloudyImg,\r\n  'Rain': rainyImg,\r\n  'Snow': snowyImg,\r\n  'Storm': stormyImg,\r\n  'Haze': cloudyImg\r\n}\r\n\r\nconst initialState = {\r\n    dayImages: images,\r\n    hourImages: images,\r\n    highTemps: ['', '', '', '', '', '', ''],\r\n    lowTemps: ['', '', '', '', '', '', ''],\r\n    hourTemps: ['', '', '', '', '', '', ''],\r\n    weatherDescs: ['', '', '', '', '', '', ''],\r\n    currentData: null,\r\n    currentImage: sunnyImg\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if(action.type === 'FETCH_WEATHER'){\r\n    return {\r\n      ...state,\r\n      highTemps: action.resData.daily.map(el => {\r\n        return Math.round(el.temp.max);\r\n      }),\r\n      lowTemps: action.resData.daily.map(el => {\r\n        return Math.round(el.temp.min);\r\n      }),\r\n      hourTemps: action.resData.hourly.slice(0, 7).map(el => {\r\n        return Math.round(el.temp).toFixed(0);\r\n      }),\r\n      dayImages: action.resData.daily.map(el => {\r\n        if(imagesObj[el.weather[0].main]){\r\n          return imagesObj[el.weather[0].main];\r\n        } else {\r\n          return sunnyImg;\r\n        }\r\n      }),\r\n      hourImages: action.resData.hourly.map(el => {\r\n        if(imagesObj[el.weather[0].main]){\r\n          return imagesObj[el.weather[0].main];\r\n        } else {\r\n          return sunnyImg;\r\n        }\r\n      }),\r\n      currentImage: imagesObj[action.resData.current.weather[0].main],\r\n      currentData: action.resData.current,\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers/reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}