{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dfred\\\\Documents\\\\Udemy React JS Course\\\\tic-tac-toe\\\\src\\\\Game.js\";\nimport React from 'react';\nimport './Game.css';\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"square\",\n      onClick: this.props.clicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, this.props.value);\n  }\n\n} //////////////////////////////////////\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      clicked: () => this.props.clicked(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n} /////////////////////////////////////\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPlayerX: true,\n      squares: Array(9).fill(null),\n      winner: null\n    };\n  }\n\n  handleClick(ind) {\n    if (this.state.squares.every(el => el !== null)) {\n      return;\n    }\n\n    console.log(this.state.squares);\n    this.setState({\n      squares: [null, null, null, null, null, null, null, null, null] //should set the square at the given ind to either 'X' or 'O'\n      // squares: this.state.squares.map((el, index) => {\n      //     if (index === ind) {\n      //         if (this.state.squares[ind] !== null) {\n      //           console.log('top');\n      //             return el;\n      //         } else {\n      //           console.log('middle');\n      //             // this.setState({\n      //             //     currentPlayerX: !this.state.currentPlayerX,\n      //             // });\n      //             return 'X';\n      //           // this.state.currentPlayerX ? 'X' : 'O';\n      //         }\n      //     } else {\n      //       console.log('bottom');\n      //         return el;\n      //     }\n      // })\n\n    });\n    console.log(this.state.squares);\n    let xCount = 0;\n    let oCount = 0;\n\n    for (let i = 0; i < this.state.squares.length; i++) {\n      if (this.state.squares[i] === 'X') {\n        xCount++;\n      }\n\n      if (this.state.squares[i] === 'O') {\n        oCount++;\n      }\n    }\n\n    const wins = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    if (xCount >= 3) {\n      const currentXValueIndexes = this.state.squares.map((el, i) => {\n        return el === 'X' ? i : 'O';\n      }).filter(el => {\n        return el !== 'O';\n      });\n\n      for (let i = 0; i < wins.length; i++) {\n        if (currentXValueIndexes.includes(wins[i][0]) && currentXValueIndexes.includes(wins[i][1]) && currentXValueIndexes.includes(wins[i][2])) {\n          this.setState({\n            winner: 'X'\n          });\n          console.log('the winner is X');\n        }\n      }\n    }\n\n    if (oCount >= 3) {\n      const currentOValueIndexes = this.state.squares.map((el, i) => {\n        return el === 'O' ? i : 'X';\n      }).filter(el => {\n        return el !== 'X';\n      });\n\n      for (let i = 0; i < wins.length; i++) {\n        if (currentOValueIndexes.includes(wins[i][0]) && currentOValueIndexes.includes(wins[i][1]) && currentOValueIndexes.includes(wins[i][2])) {\n          this.setState({\n            winner: 'O'\n          });\n          console.log('the winner is O');\n        }\n      }\n    }\n  }\n\n  render() {\n    let winStatement = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 28\n      }\n    }, \"The winner is: \", this.state.winner);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, winStatement, /*#__PURE__*/React.createElement(Board, {\n      clicked: ix => this.handleClick(ix),\n      squares: this.state.squares,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"The current player is \", this.state.currentPlayerX ? 'X' : 'O'), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/dfred/Documents/Udemy React JS Course/tic-tac-toe/src/Game.js"],"names":["React","Square","Component","render","props","clicked","value","Board","renderSquare","i","squares","Game","constructor","state","currentPlayerX","Array","fill","winner","handleClick","ind","every","el","console","log","setState","xCount","oCount","length","wins","currentXValueIndexes","map","filter","includes","currentOValueIndexes","winStatement","ix"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACjCC,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,SAAS,EAAC,QADd;AAEI,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKD,KAAL,CAAWE,KAHhB,CADJ;AAOH;;AATgC,C,CAWrC;;;AACA,MAAMC,KAAN,SAAoBP,KAAK,CAACE,SAA1B,CAAoC;AAChCM,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,OAAX,CAAmBD,CAAnB,CADT;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWC,OAAX,CAAmBI,CAAnB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAEHN,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKK,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CANJ,eAWI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAXJ,CADJ;AAmBH;;AA9B+B,C,CAgCpC;;;AACA,MAAMG,IAAN,SAAmBX,KAAK,CAACE,SAAzB,CAAmC;AAC/BU,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKS,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,IADP;AAETJ,MAAAA,OAAO,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAFA;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,QAAI,KAAKN,KAAL,CAAWH,OAAX,CAAmBU,KAAnB,CAA0BC,EAAD,IAAQA,EAAE,KAAK,IAAxC,CAAJ,EAAmD;AAC/C;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWH,OAAvB;AAEA,SAAKc,QAAL,CAAc;AACZd,MAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CADG,CAEZ;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBU,KAAd;AAsBFY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWH,OAAvB;AACE,QAAIe,MAAM,GAAG,CAAb;AACA,QAAIC,MAAM,GAAG,CAAb;;AAEA,SAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKI,KAAL,CAAWH,OAAX,CAAmBiB,MAAvC,EAA+ClB,CAAC,EAAhD,EAAoD;AAChD,UAAI,KAAKI,KAAL,CAAWH,OAAX,CAAmBD,CAAnB,MAA0B,GAA9B,EAAmC;AAC/BgB,QAAAA,MAAM;AACT;;AACD,UAAI,KAAKZ,KAAL,CAAWH,OAAX,CAAmBD,CAAnB,MAA0B,GAA9B,EAAmC;AAC/BiB,QAAAA,MAAM;AACT;AACJ;;AAED,UAAME,IAAI,GAAG,CACT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADS,EAET,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFS,EAGT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHS,EAIT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJS,EAKT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALS,EAMT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANS,EAOT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPS,EAQT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARS,CAAb;;AAUA,QAAIH,MAAM,IAAI,CAAd,EAAiB;AACb,YAAMI,oBAAoB,GAAG,KAAKhB,KAAL,CAAWH,OAAX,CACxBoB,GADwB,CACpB,CAACT,EAAD,EAAKZ,CAAL,KAAW;AACZ,eAAOY,EAAE,KAAK,GAAP,GAAaZ,CAAb,GAAiB,GAAxB;AACH,OAHwB,EAIxBsB,MAJwB,CAIhBV,EAAD,IAAQ;AACZ,eAAOA,EAAE,KAAK,GAAd;AACH,OANwB,CAA7B;;AAOA,WAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAAI,CAACD,MAAzB,EAAiClB,CAAC,EAAlC,EAAsC;AAClC,YACIoB,oBAAoB,CAACG,QAArB,CAA8BJ,IAAI,CAACnB,CAAD,CAAJ,CAAQ,CAAR,CAA9B,KACAoB,oBAAoB,CAACG,QAArB,CAA8BJ,IAAI,CAACnB,CAAD,CAAJ,CAAQ,CAAR,CAA9B,CADA,IAEAoB,oBAAoB,CAACG,QAArB,CAA8BJ,IAAI,CAACnB,CAAD,CAAJ,CAAQ,CAAR,CAA9B,CAHJ,EAIE;AACE,eAAKe,QAAL,CAAc;AAAEP,YAAAA,MAAM,EAAE;AAAV,WAAd;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ;AACJ;;AACD,QAAGG,MAAM,IAAI,CAAb,EAAe;AACX,YAAMO,oBAAoB,GAAG,KAAKpB,KAAL,CAAWH,OAAX,CAC5BoB,GAD4B,CACxB,CAACT,EAAD,EAAKZ,CAAL,KAAW;AACZ,eAAOY,EAAE,KAAK,GAAP,GAAaZ,CAAb,GAAiB,GAAxB;AACH,OAH4B,EAI5BsB,MAJ4B,CAIpBV,EAAD,IAAQ;AACZ,eAAOA,EAAE,KAAK,GAAd;AACH,OAN4B,CAA7B;;AAOA,WAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAAI,CAACD,MAAzB,EAAiClB,CAAC,EAAlC,EAAsC;AAClC,YACIwB,oBAAoB,CAACD,QAArB,CAA8BJ,IAAI,CAACnB,CAAD,CAAJ,CAAQ,CAAR,CAA9B,KACAwB,oBAAoB,CAACD,QAArB,CAA8BJ,IAAI,CAACnB,CAAD,CAAJ,CAAQ,CAAR,CAA9B,CADA,IAEAwB,oBAAoB,CAACD,QAArB,CAA8BJ,IAAI,CAACnB,CAAD,CAAJ,CAAQ,CAAR,CAA9B,CAHJ,EAIE;AACE,eAAKe,QAAL,CAAc;AAAEP,YAAAA,MAAM,EAAE;AAAV,WAAd;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ;AACJ;AACJ;;AAEDpB,EAAAA,MAAM,GAAG;AACL,QAAI+B,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,KAAKrB,KAAL,CAAWI,MAA9B,CAAnB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,YADH,eAEI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAGC,EAAD,IAAQ,KAAKjB,WAAL,CAAiBiB,EAAjB,CADrB;AAEI,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWH,OAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAQI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA4B,KAAKG,KAAL,CAAWC,cAAX,GAA4B,GAA5B,GAAkC,GAA9D,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CARJ,CADJ;AAeH;;AAtH8B;;AAyHnC,eAAeH,IAAf","sourcesContent":["import React from 'react';\r\nimport './Game.css';\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button \r\n                className=\"square\" \r\n                onClick={this.props.clicked}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n//////////////////////////////////////\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n          <Square\r\n            value={this.props.squares[i]}\r\n            clicked={() => this.props.clicked(i)}\r\n          />\r\n        );\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n/////////////////////////////////////\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPlayerX: true,\r\n            squares: Array(9).fill(null),\r\n            winner: null\r\n        };\r\n    }  \r\n  \r\n    handleClick(ind) {\r\n        if (this.state.squares.every((el) => el !== null)) {\r\n            return;\r\n        }\r\n        console.log(this.state.squares);\r\n\r\n        this.setState({\r\n          squares: [null, null, null, null, null, null, null, null, null]\r\n          //should set the square at the given ind to either 'X' or 'O'\r\n            // squares: this.state.squares.map((el, index) => {\r\n            //     if (index === ind) {\r\n            //         if (this.state.squares[ind] !== null) {\r\n            //           console.log('top');\r\n            //             return el;\r\n            //         } else {\r\n            //           console.log('middle');\r\n            //             // this.setState({\r\n            //             //     currentPlayerX: !this.state.currentPlayerX,\r\n            //             // });\r\n            //             return 'X';\r\n            //           // this.state.currentPlayerX ? 'X' : 'O';\r\n            //         }\r\n            //     } else {\r\n            //       console.log('bottom');\r\n            //         return el;\r\n            //     }\r\n            // })\r\n        });\r\n      console.log(this.state.squares);\r\n        let xCount = 0;\r\n        let oCount = 0;\r\n\r\n        for (let i = 0; i < this.state.squares.length; i++) {\r\n            if (this.state.squares[i] === 'X') {\r\n                xCount++;\r\n            }\r\n            if (this.state.squares[i] === 'O') {\r\n                oCount++;\r\n            }\r\n        }\r\n\r\n        const wins = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        if (xCount >= 3) {\r\n            const currentXValueIndexes = this.state.squares\r\n                .map((el, i) => {\r\n                    return el === 'X' ? i : 'O';\r\n                })\r\n                .filter((el) => {\r\n                    return el !== 'O';\r\n                });\r\n            for (let i = 0; i < wins.length; i++) {\r\n                if (\r\n                    currentXValueIndexes.includes(wins[i][0]) &&\r\n                    currentXValueIndexes.includes(wins[i][1]) &&\r\n                    currentXValueIndexes.includes(wins[i][2])\r\n                ) {\r\n                    this.setState({ winner: 'X' });\r\n                    console.log('the winner is X');\r\n                }\r\n            }\r\n        }\r\n        if(oCount >= 3){\r\n            const currentOValueIndexes = this.state.squares\r\n            .map((el, i) => {\r\n                return el === 'O' ? i : 'X';\r\n            })\r\n            .filter((el) => {\r\n                return el !== 'X';\r\n            });\r\n            for (let i = 0; i < wins.length; i++) {\r\n                if (\r\n                    currentOValueIndexes.includes(wins[i][0]) &&\r\n                    currentOValueIndexes.includes(wins[i][1]) &&\r\n                    currentOValueIndexes.includes(wins[i][2])\r\n                ) {\r\n                    this.setState({ winner: 'O' });\r\n                    console.log('the winner is O');\r\n                }\r\n            }\r\n        }      \r\n    }\r\n\r\n    render() {\r\n        let winStatement = <p>The winner is: {this.state.winner}</p>;\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                  {winStatement}\r\n                    <Board\r\n                        clicked={(ix) => this.handleClick(ix)}\r\n                        squares={this.state.squares}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>The current player is {this.state.currentPlayerX ? 'X' : 'O'}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}