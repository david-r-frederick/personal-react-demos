{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dfred\\\\Documents\\\\Udemy React JS Course\\\\tic-tac-toe\\\\src\\\\Game.js\";\nimport React from 'react';\nimport './Game.css';\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"square\",\n      onClick: this.props.clicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, this.props.value);\n  }\n\n} //////////////////////////////////////\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      clicked: () => this.props.clicked(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n} /////////////////////////////////////\n\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentPlayerX: true,\n      squares: Array(9).fill(null),\n      winner: null\n    };\n  }\n\n  //     };\n  // }\n  handleClick(ind) {\n    if (this.state.squares.every(el => el !== null)) {\n      return;\n    }\n\n    console.log(this.state.squares);\n    this.setState({\n      //should set the square at the given ind to either 'X' or 'O'\n      squares: this.state.squares.map((el, index) => {\n        if (index === ind) {\n          if (this.state.squares[ind] !== null) {\n            return el;\n          } else {\n            if (this.state.currentPlayerX) {\n              return 'X';\n            } else {\n              return 'O';\n            }\n          }\n        } else {\n          return el;\n        }\n      })\n    });\n    console.log(this.state.squares);\n    this.setState({\n      currentPlayerX: !this.state.currentPlayerX\n    });\n    let xCount = 0;\n    let oCount = 0;\n\n    for (let i = 0; i < this.state.squares.length; i++) {\n      if (this.state.squares[i] === 'X') {\n        xCount++;\n      }\n\n      if (this.state.squares[i] === 'O') {\n        oCount++;\n      }\n    }\n\n    const wins = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    if (xCount >= 3) {\n      const currentXValueIndexes = this.state.squares.map((el, i) => {\n        return el === 'X' ? i : 'O';\n      }).filter(el => {\n        return el !== 'O';\n      });\n\n      for (let i = 0; i < wins.length; i++) {\n        if (currentXValueIndexes.includes(wins[i][0]) && currentXValueIndexes.includes(wins[i][1]) && currentXValueIndexes.includes(wins[i][2])) {\n          this.setState({\n            winner: 'X'\n          });\n          console.log('the winner is X');\n        }\n      }\n    }\n\n    if (oCount >= 3) {\n      const currentOValueIndexes = this.state.squares.map((el, i) => {\n        return el === 'O' ? i : 'X';\n      }).filter(el => {\n        return el !== 'X';\n      });\n\n      for (let i = 0; i < wins.length; i++) {\n        if (currentOValueIndexes.includes(wins[i][0]) && currentOValueIndexes.includes(wins[i][1]) && currentOValueIndexes.includes(wins[i][2])) {\n          this.setState({\n            winner: 'O'\n          });\n          console.log('the winner is O');\n        }\n      }\n    }\n  }\n\n  render() {\n    let winStatement = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 28\n      }\n    }, \"The winner is: \", this.state.winner);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, winStatement, /*#__PURE__*/React.createElement(Board, {\n      clicked: ix => this.handleClick(ix),\n      squares: this.state.squares,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"The current player is\", ' ', this.state.currentPlayerX ? 'X' : 'O'), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/dfred/Documents/Udemy React JS Course/tic-tac-toe/src/Game.js"],"names":["React","Square","Component","render","props","clicked","value","Board","renderSquare","i","squares","Game","state","currentPlayerX","Array","fill","winner","handleClick","ind","every","el","console","log","setState","map","index","xCount","oCount","length","wins","currentXValueIndexes","filter","includes","currentOValueIndexes","winStatement","ix"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Game.css';\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button className=\"square\" onClick={this.props.clicked}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n//////////////////////////////////////\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                clicked={() => this.props.clicked(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n/////////////////////////////////////\r\nclass Game extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.\r\n        state = {\r\n            currentPlayerX: true,\r\n            squares: Array(9).fill(null),\r\n            winner: null}\r\n    //     };\r\n    // }\r\n\r\n    handleClick(ind) {\r\n        if (this.state.squares.every((el) => el !== null)) {\r\n            return;\r\n        }\r\n        \r\n        console.log(this.state.squares);\r\n\r\n        this.setState({\r\n            //should set the square at the given ind to either 'X' or 'O'\r\n            squares: this.state.squares.map((el, index) => {\r\n                if (index === ind) {\r\n                    if (this.state.squares[ind] !== null) {\r\n                        return el;\r\n                    } else {\r\n                        if(this.state.currentPlayerX){\r\n                            return 'X';\r\n                        } else {\r\n                            return 'O';\r\n                        } \r\n                    }\r\n                } else {\r\n                    return el;\r\n                }\r\n            }),\r\n        });\r\n\r\n        console.log(this.state.squares);\r\n\r\n        this.setState({\r\n            currentPlayerX: !this.state.currentPlayerX,\r\n        });\r\n        let xCount = 0;\r\n        let oCount = 0;\r\n\r\n        for (let i = 0; i < this.state.squares.length; i++) {\r\n            if (this.state.squares[i] === 'X') {\r\n                xCount++;\r\n            }\r\n            if (this.state.squares[i] === 'O') {\r\n                oCount++;\r\n            }\r\n        }\r\n\r\n        const wins = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        if (xCount >= 3) {\r\n            const currentXValueIndexes = this.state.squares\r\n                .map((el, i) => {\r\n                    return el === 'X' ? i : 'O';\r\n                })\r\n                .filter((el) => {\r\n                    return el !== 'O';\r\n                });\r\n            for (let i = 0; i < wins.length; i++) {\r\n                if (\r\n                    currentXValueIndexes.includes(wins[i][0]) &&\r\n                    currentXValueIndexes.includes(wins[i][1]) &&\r\n                    currentXValueIndexes.includes(wins[i][2])\r\n                ) {\r\n                    this.setState({ winner: 'X' });\r\n                    console.log('the winner is X');\r\n                }\r\n            }\r\n        }\r\n        if (oCount >= 3) {\r\n            const currentOValueIndexes = this.state.squares\r\n                .map((el, i) => {\r\n                    return el === 'O' ? i : 'X';\r\n                })\r\n                .filter((el) => {\r\n                    return el !== 'X';\r\n                });\r\n            for (let i = 0; i < wins.length; i++) {\r\n                if (\r\n                    currentOValueIndexes.includes(wins[i][0]) &&\r\n                    currentOValueIndexes.includes(wins[i][1]) &&\r\n                    currentOValueIndexes.includes(wins[i][2])\r\n                ) {\r\n                    this.setState({ winner: 'O' });\r\n                    console.log('the winner is O');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let winStatement = <p>The winner is: {this.state.winner}</p>;\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    {winStatement}\r\n                    <Board\r\n                        clicked={(ix) => this.handleClick(ix)}\r\n                        squares={this.state.squares}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>\r\n                        The current player is{' '}\r\n                        {this.state.currentPlayerX ? 'X' : 'O'}\r\n                    </div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}